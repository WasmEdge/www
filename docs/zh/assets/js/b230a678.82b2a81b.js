"use strict";(self.webpackChunkbook=self.webpackChunkbook||[]).push([[4039],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>p});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=a.createContext({}),d=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=d(n),c=s,p=u["".concat(i,".").concat(c)]||u[c]||g[c]||o;return n?a.createElement(p,r(r({ref:t},m),{},{components:n})):a.createElement(p,r({ref:t},m))}));function p(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,r=new Array(o);r[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:s,r[1]=l;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},87241:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(87462),s=(n(67294),n(3905));const o={sidebar_position:1},r="Install Notes",l={unversionedId:"embed/quick-start/install",id:"embed/quick-start/install",title:"Install Notes",description:"To use a kind of WasmEdge language SDK, you must install WasmEdge itself first. Please be noted, he version of WasmEdge's language SDKs should be the same as the version of WasmEdge. For example, If you want to use WasmEdge Go SDK v{{ wasmedgeversion }}, then your WasmEdge version must be {{ wasmedgeversion }} as well.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/embed/quick-start/install.md",sourceDirName:"embed/quick-start",slug:"/embed/quick-start/install",permalink:"/docs/zh/embed/quick-start/install",draft:!1,editUrl:"https://github.com/wasmedge/docs/blob/main/docs/embed/quick-start/install.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"embedSidebar",previous:{title:"Quick Start",permalink:"/docs/zh/category/quick-start"},next:{title:"Create a WASM app using Rust and wasmedge-bindgen",permalink:"/docs/zh/embed/quick-start/wasm-app-in-rust"}},i={},d=[{value:"Install WasmEdge GO SDK as an example",id:"install-wasmedge-go-sdk-as-an-example",level:2},{value:"Run the demo",id:"run-the-demo",level:2},{value:"Achieve higher performance",id:"achieve-higher-performance",level:2}],m={toc:d},u="wrapper";function g(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"install-notes"},"Install Notes"),(0,s.kt)("p",null,"To use a kind of WasmEdge language SDK, you must install WasmEdge itself first. Please be noted, he version of WasmEdge's language SDKs should be the same as the version of WasmEdge. For example, If you want to use WasmEdge Go SDK v0.13.3, then your WasmEdge version must be 0.13.3 as well."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"The releases of WasmEdge language SDKs follow the official version of WasmEdge. We don't release the alpha, beta, and RC versions for WasmEdge language SDKs. For the WasmEdge release process, please check ",(0,s.kt)("a",{parentName:"p",href:"/docs/zh/contribute/release"},"here"),".")),(0,s.kt)("h2",{id:"install-wasmedge-go-sdk-as-an-example"},"Install WasmEdge GO SDK as an example"),(0,s.kt)("p",null,"Let's take WasmEdge Go SDK as an example to show how to embed a WASM App in Rust to a Go Host application."),(0,s.kt)("p",null,"First, ensure you have installed ",(0,s.kt)("a",{parentName:"p",href:"https://go.dev/dl/"},"Go")," first. The Golang version should be above 1.16."),(0,s.kt)("p",null,"Next, let's install WasmEdge and WasmEdge Go SDK. Again, The WasmEdge and WasmEdge Go SDK should be the same version."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ go version\ngo version go1.16.5 linux/amd64\n\n# Install WasmEdge\n$ curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s -- -v 0.13.3\n\n# Install WasmEdge-Go\n$ go get github.com/second-state/WasmEdge-go/wasmedge@v0.13.3\n")),(0,s.kt)("p",null,"Now we have set up WasmEdge and WasmEdge Go SDK. Next, let's see how to create a WASM app using Rust and wasmedge-bindgen."),(0,s.kt)("p",null,"To embed WasmEdge into your host app, you must install WasmEdge itself and its corresponding WasmEdge's language bindings."),(0,s.kt)("p",null,"In this Quick Start guide, we use WasmEdge Go SDK as an example to show how it works. Primarily, we will use ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/WasmEdge-go-examples/tree/master/wasmedge-bindgen/go_BindgenFuncs"},"a bindgen function")," in rust to demonstrate how to call a few simple WebAssembly functions from a Go app."),(0,s.kt)("p",null,"Before we start, ensure you have installed ",(0,s.kt)("a",{parentName:"p",href:"https://go.dev/dl/"},"Go first"),". The Golang version should be above 1.16."),(0,s.kt)("p",null,"First, let's install WasmEdge and WasmEdge Go SDK. ",(0,s.kt)("strong",{parentName:"p"},"They should be in the same version"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ go version\ngo version go1.16.5 linux/amd64\n\n# Install WasmEdge\n$ curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s -- -v 0.13.3\n\n# Install WasmEdge-Go\n$ go get github.com/second-state/WasmEdge-go/wasmedge@v0.13.3\n\n# Install the WasmEdge-bindgen tool, which helps us handle complex data passing\n$ go get github.com/second-state/wasmedge-bindgen@v0.4.1\n")),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"For more advanced features like AI inference, please refer to ",(0,s.kt)("a",{parentName:"p",href:"/category/go-sdk-for-embedding-wasmedge"},"Go SDK For Embedding WASM Function Chapter"),".")),(0,s.kt)("p",null,"Since the demo app includes ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/WasmEdge-go-examples/blob/master/wasmedge-bindgen/go_BindgenFuncs/rust_bindgen_funcs_lib.wasm"},"a compiled WASM file")," from ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/WasmEdge-go-examples/tree/master/wasmedge-bindgen/go_BindgenFuncs/rust_bindgen_funcs"},"the Rust function"),", so we don't need to install the Rust toolchain to compile the Rust code to wasm."),(0,s.kt)("h2",{id:"run-the-demo"},"Run the demo"),(0,s.kt)("p",null,"Now we have set up the basic environment, let's run the example."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Get the source code of this example\n$ git clone https://github.com/second-state/WasmEdge-go-examples.git\n$ cd WasmEdge-go-examples//wasmedge-bindgen/go_BindgenFuncs/\n\n# build the project\ngo build\n\n# run the example\n./bindgen_funcs rust_bindgen_funcs_lib.wasm\n")),(0,s.kt)("p",null,"The standard output of this example will be the following:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'Run bindgen -- create_line: {"points":[{"x":2.5,"y":7.8},{"x":2.5,"y":5.8}],"valid":true,"length":2.0,"desc":"A thin red line"}\nRun bindgen -- say: hello bindgen funcs test\nRun bindgen -- obfusticate: N dhvpx oebja sbk whzcf bire gur ynml qbt\nRun bindgen -- lowest_common_multiple: 246\nRun bindgen -- sha3_digest: [87 27 231 209 189 105 251 49 159 10 211 250 15 159 154 181 43 218 26 141 56 199 25 45 60 10 20 163 54 211 195 203]\nRun bindgen -- keccak_digest: [126 194 241 200 151 116 227 33 216 99 159 22 107 3 177 169 216 191 114 156 174 193 32 159 246 228 245 133 52 75 55 27]\n')),(0,s.kt)("h2",{id:"achieve-higher-performance"},"Achieve higher performance"),(0,s.kt)("p",null,"Use the following command line if you want to get better performance."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Use the AoT mode\nwasmedgec rust_bindgen_funcs_lib.wasm rust_bindgen_funcs_lib.wasm\n\n# Run the demo\n./bindgen_funcs rust_bindgen_funcs_lib.wasm\n")),(0,s.kt)("p",null,"That's it. Let's dive into ",(0,s.kt)("a",{parentName:"p",href:"/category/go-sdk-for-embedding-wasmedge"},"more examples with WasmEdge Go SDK"),"."))}g.isMDXComponent=!0}}]);