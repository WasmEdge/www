"use strict";(self.webpackChunkbook=self.webpackChunkbook||[]).push([[6511],{3905:(e,n,t)=>{t.d(n,{Zo:()=>g,kt:()=>m});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=i.createContext({}),s=function(e){var n=i.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},g=function(e){var n=s(e.components);return i.createElement(u.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=s(t),d=r,m=p["".concat(u,".").concat(d)]||p[d]||c[d]||o;return t?i.createElement(m,a(a({ref:n},g),{},{components:t})):i.createElement(m,a({ref:n},g))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[p]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6091:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=t(7462),r=(t(7294),t(3905));const o={sidebar_position:1},a="Build WasmEdge With WASI-Logging Plug-in",l={unversionedId:"contribute/source/plugin/wasi_logging",id:"contribute/source/plugin/wasi_logging",title:"Build WasmEdge With WASI-Logging Plug-in",description:"Prerequisites",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/contribute/source/plugin/wasi_logging.md",sourceDirName:"contribute/source/plugin",slug:"/contribute/source/plugin/wasi_logging",permalink:"/docs/zh/contribute/source/plugin/wasi_logging",draft:!1,editUrl:"https://github.com/wasmedge/docs/blob/main/docs/contribute/source/plugin/wasi_logging.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"contributeSidebar",previous:{title:"Build with WASI-Crypto Plugin",permalink:"/docs/zh/contribute/source/plugin/wasi_crypto"},next:{title:"Build with WASI-nn Plugin",permalink:"/docs/zh/contribute/source/plugin/wasi_nn"}},u={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Build WasmEdge with WASI-Logging Plug-in",id:"build-wasmedge-with-wasi-logging-plug-in-1",level:2}],g={toc:s},p="wrapper";function c(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,i.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"build-wasmedge-with-wasi-logging-plug-in"},"Build WasmEdge With WASI-Logging Plug-in"),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"The prerequisite of the Wasi-Logging plug-in is the same as the WasmEdge building environment on the ",(0,r.kt)("a",{parentName:"p",href:"/docs/zh/contribute/source/os/linux"},"Linux")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/zh/contribute/source/os/macos"},"MacOS")," platforms."),(0,r.kt)("h2",{id:"build-wasmedge-with-wasi-logging-plug-in-1"},"Build WasmEdge with WASI-Logging Plug-in"),(0,r.kt)("p",null,"To enable the WASI-Logging Plug-in, developers need to build the WasmEdge from source with the cmake option ",(0,r.kt)("inlineCode",{parentName:"p"},"-DWASMEDGE_PLUGIN_WASI_LOGGING=ON"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd <path/to/your/wasmedge/source/folder>\nmkdir -p build && cd build\ncmake -DCMAKE_BUILD_TYPE=Release -DWASMEDGE_PLUGIN_WASI_LOGGING=ON .. && make -j\n# For the WASI-Logging plug-in, you should install this project.\ncmake --install .\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If the built ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmedge")," CLI tool cannot find the WASI-Logging plug-in, you can set the ",(0,r.kt)("inlineCode",{parentName:"p"},"WASMEDGE_PLUGIN_PATH")," environment variable to the plug-in installation path (",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/local/lib/wasmedge"),", or the built plug-in path ",(0,r.kt)("inlineCode",{parentName:"p"},"build/plugins/wasi_logging"),") to try to fix this issue. You should find ",(0,r.kt)("inlineCode",{parentName:"p"},"libwasmedgePluginWasiLogging.so")," in your ",(0,r.kt)("inlineCode",{parentName:"p"},"WASMEDGE_PLUGIN_PATH"))),(0,r.kt)("p",null,"Then you will have an executable ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmedge")," runtime under ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/local/bin")," and the WASI-Logging plug-in under ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/local/lib/wasmedge/libwasmedgePluginWasiLogging.so")," after installation."))}c.isMDXComponent=!0}}]);