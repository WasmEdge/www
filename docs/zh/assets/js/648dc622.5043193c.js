"use strict";(self.webpackChunkbook=self.webpackChunkbook||[]).push([[7707],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=s,f=u["".concat(o,".").concat(d)]||u[d]||c[d]||r;return n?a.createElement(f,i(i({ref:t},m),{},{components:n})):a.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:s,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},15314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),s=(n(67294),n(3905));const r={sidebar_position:2},i="\u5728 Netlify \u4e0a\u7684 WebAssembly \u65e0\u670d\u52a1\u5668\u51fd\u6570",l={unversionedId:"start/usage/serverless/netlify",id:"start/usage/serverless/netlify",title:"\u5728 Netlify \u4e0a\u7684 WebAssembly \u65e0\u670d\u52a1\u5668\u51fd\u6570",description:"\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5728 Netlify \u4e0a\u90e8\u7f72\u7684\u4e24\u4e2a\u4f7f\u7528 Rust \u548c WasmEdge \u7684\u65e0\u670d\u52a1\u5668\u51fd\u6570\u3002\u4e00\u4e2a\u662f\u56fe\u50cf\u5904\u7406\u529f\u80fd\uff0c\u53e6\u4e00\u4e2a\u662f TensorFlow \u63a8\u7406\u529f\u80fd\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/start/usage/serverless/netlify.md",sourceDirName:"start/usage/serverless",slug:"/start/usage/serverless/netlify",permalink:"/docs/zh/start/usage/serverless/netlify",draft:!1,editUrl:"https://github.com/wasmedge/docs/blob/main/docs/start/usage/serverless/netlify.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"startSidebar",previous:{title:"\u5728 AWS Lambda \u4e2d\u4f7f\u7528 WebAssembly Serverless Functions",permalink:"/docs/zh/start/usage/serverless/aws"},next:{title:"\u817e\u8baf\u4e91\u4e0a\u7684 WebAssembly \u65e0\u670d\u52a1\u5668\u51fd\u6570",permalink:"/docs/zh/start/usage/serverless/tencent"}},o={},p=[{value:"\u73af\u5883",id:"\u73af\u5883",level:2},{value:"\u793a\u4f8b 1\uff1a\u56fe\u50cf\u5904\u7406",id:"\u793a\u4f8b-1\u56fe\u50cf\u5904\u7406",level:2},{value:"\u793a\u4f8b 2\uff1aAI \u63a8\u7406",id:"\u793a\u4f8b-2ai-\u63a8\u7406",level:2}],m={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"\u5728-netlify-\u4e0a\u7684-webassembly-\u65e0\u670d\u52a1\u5668\u51fd\u6570"},"\u5728 Netlify \u4e0a\u7684 WebAssembly \u65e0\u670d\u52a1\u5668\u51fd\u6570"),(0,s.kt)("p",null,"\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5728 Netlify \u4e0a\u90e8\u7f72\u7684\u4e24\u4e2a\u4f7f\u7528 Rust \u548c WasmEdge \u7684\u65e0\u670d\u52a1\u5668\u51fd\u6570\u3002\u4e00\u4e2a\u662f\u56fe\u50cf\u5904\u7406\u529f\u80fd\uff0c\u53e6\u4e00\u4e2a\u662f TensorFlow \u63a8\u7406\u529f\u80fd\u3002"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u6b32\u4e86\u89e3\u66f4\u591a\u6709\u5173\u4e3a\u4f55\u5728 Netlify \u4e0a\u4f7f\u7528 WasmEdge\uff0c\u8bf7\u53c2\u9605\u6587\u7ae0 ",(0,s.kt)("a",{parentName:"p",href:"https://www.secondstate.io/articles/netlify-wasmedge-webassembly-rust-serverless/"},"WebAssembly Serverless Functions in Netlify"),"\u3002")),(0,s.kt)("h2",{id:"\u73af\u5883"},"\u73af\u5883"),(0,s.kt)("p",null,"\u7531\u4e8e\u6211\u4eec\u7684\u6f14\u793a WebAssembly \u51fd\u6570\u662f\u7528 Rust \u7f16\u5199\u7684\uff0c\u4f60\u5c06\u9700\u8981\u4e00\u4e2a ",(0,s.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/tools/install"},"Rust \u7f16\u8bd1\u5668"),"\u3002\u786e\u4fdd\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5b89\u88c5 ",(0,s.kt)("inlineCode",{parentName:"p"},"wasm32-wasi")," \u7f16\u8bd1\u76ee\u6807\uff0c\u4ee5\u4fbf\u751f\u6210 WebAssembly \u5b57\u8282\u7801\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"rustup target add wasm32-wasi\n")),(0,s.kt)("p",null,"\u6f14\u793a\u5e94\u7528\u7684\u524d\u7aef\u662f\u7528 ",(0,s.kt)("a",{parentName:"p",href:"https://nextjs.org/"},"Next.js")," \u7f16\u5199\u7684\uff0c\u5e76\u90e8\u7f72\u5728 Netlify \u4e0a\u3002\u6211\u4eec\u5047\u8bbe\u4f60\u5df2\u7ecf\u5177\u5907\u4f7f\u7528 Next.js \u548c Netlify \u7684\u57fa\u672c\u77e5\u8bc6\u3002"),(0,s.kt)("h2",{id:"\u793a\u4f8b-1\u56fe\u50cf\u5904\u7406"},"\u793a\u4f8b 1\uff1a\u56fe\u50cf\u5904\u7406"),(0,s.kt)("p",null,"\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u6f14\u793a\u5e94\u7528\u5141\u8bb8\u7528\u6237\u4e0a\u4f20\u56fe\u50cf\uff0c\u7136\u540e\u8c03\u7528\u65e0\u670d\u52a1\u5668\u51fd\u6570\u5c06\u5176\u8f6c\u6362\u4e3a\u9ed1\u767d\u3002\u90e8\u7f72\u5728 Netlify \u4e0a\u7684 ",(0,s.kt)("a",{parentName:"p",href:"https://60fe22f9ff623f0007656040--reverent-hodgkin-dc1f51.netlify.app/"},"\u5b9e\u65f6\u6f14\u793a")," \u53ef\u4f9b\u4f7f\u7528\u3002"),(0,s.kt)("p",null,"\u9996\u5148\u8bf7 fork ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime"},"\u6f14\u793a\u5e94\u7528\u7684 GitHub \u5b58\u50a8\u5e93"),"\u3002\u8981\u5728 Netlify \u4e0a\u90e8\u7f72\u8be5\u5e94\u7528\uff0c\u53ea\u9700",(0,s.kt)("a",{parentName:"p",href:"https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/"},"\u5c06\u4f60\u7684 GitHub \u5b58\u50a8\u5e93\u6dfb\u52a0\u5230 Netlify"),"\u3002"),(0,s.kt)("p",null,"\u8be5\u5b58\u50a8\u5e93\u662f\u4e00\u4e2a\u6807\u51c6\u7684 Netlify \u5e73\u53f0 Next.js \u5e94\u7528\u7a0b\u5e8f\u3002\u540e\u7aef\u65e0\u670d\u52a1\u5668\u51fd\u6570\u4f4d\u4e8e ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/tree/main/api/functions/image-grayscale"},(0,s.kt)("inlineCode",{parentName:"a"},"api/functions/image_grayscale"))," \u6587\u4ef6\u5939\u4e2d\u3002",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/main/api/functions/image-grayscale/src/main.rs"},(0,s.kt)("inlineCode",{parentName:"a"},"src/main.rs"))," \u6587\u4ef6\u5305\u542b\u4e86 Rust \u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u3002Rust \u7a0b\u5e8f\u4ece ",(0,s.kt)("inlineCode",{parentName:"p"},"STDIN")," \u8bfb\u53d6\u56fe\u50cf\u6570\u636e\uff0c\u7136\u540e\u5c06\u9ed1\u767d\u56fe\u50cf\u8f93\u51fa\u5230 ",(0,s.kt)("inlineCode",{parentName:"p"},"STDOUT"),"\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rust"},"use hex;\nuse std::io::{self, Read};\nuse image::{ImageOutputFormat, ImageFormat};\n\nfn main() {\n  let mut buf = Vec::new();\n  io::stdin().read_to_end(&mut buf).unwrap();\n\n  let image_format_detected: ImageFormat = image::guess_format(&buf).unwrap();\n  let img = image::load_from_memory(&buf).unwrap();\n  let filtered = img.grayscale();\n  let mut buf = vec![];\n  match image_format_detected {\n    ImageFormat::Gif => {\n      filtered.write_to(&mut buf, ImageOutputFormat::Gif).unwrap();\n    },\n    _ => {\n      filtered.write_to(&mut buf, ImageOutputFormat::Png).unwrap();\n    },\n  };\n  io::stdout().write_all(&buf).unwrap();\n  io::stdout().flush().unwrap();\n}\n")),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 Rust \u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"cargo")," \u5de5\u5177\u5c06 Rust \u7a0b\u5e8f\u6784\u5efa\u6210 WebAssembly \u5b57\u8282\u7801\u6216\u672c\u673a\u4ee3\u7801\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cd api/functions/image-grayscale/\ncargo build --release --target wasm32-wasi\n")),(0,s.kt)("p",null,"\u5c06\u6784\u5efa\u4ea7\u7269\u590d\u5236\u5230 ",(0,s.kt)("inlineCode",{parentName:"p"},"api")," \u6587\u4ef6\u5939\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cp target/wasm32-wasi/release/grayscale.wasm ../../\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u5728\u8bbe\u7f6e\u65e0\u670d\u52a1\u5668\u73af\u5883\u65f6\uff0cNetlify \u51fd\u6570\u4f1a\u8fd0\u884c ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/main/api/pre.sh"},(0,s.kt)("inlineCode",{parentName:"a"},"api/pre.sh")),"\u3002\u8be5\u811a\u672c\u5b89\u88c5 WasmEdge \u8fd0\u884c\u65f6\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a WebAssembly \u5b57\u8282\u7801\u7a0b\u5e8f\u7f16\u8bd1\u4e3a\u672c\u673a ",(0,s.kt)("inlineCode",{parentName:"p"},"so")," \u5e93\uff0c\u4ee5\u5b9e\u73b0\u66f4\u5feb\u7684\u6267\u884c\u3002")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/main/api/hello.js"},(0,s.kt)("inlineCode",{parentName:"a"},"api/hello.js"))," \u811a\u672c\u52a0\u8f7d WasmEdge \u8fd0\u884c\u65f6\uff0c\u542f\u52a8 WasmEdge \u4e2d\u7f16\u8bd1\u7684 WebAssembly \u7a0b\u5e8f\uff0c\u5e76\u901a\u8fc7 ",(0,s.kt)("inlineCode",{parentName:"p"},"STDIN")," \u4f20\u9012\u4e0a\u4f20\u7684\u56fe\u50cf\u6570\u636e\u3002\u8bf7\u6ce8\u610f\uff0c\u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\uff0c",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/main/api/hello.js"},(0,s.kt)("inlineCode",{parentName:"a"},"api/hello.js"))," \u8fd0\u884c\u7684\u662f\u7531 ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/main/api/pre.sh"},(0,s.kt)("inlineCode",{parentName:"a"},"api/pre.sh"))," \u751f\u6210\u7684\u7f16\u8bd1\u540e\u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"grayscale.so")," \u6587\u4ef6\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const fs = require('fs');\nconst { spawn } = require('child_process');\nconst path = require('path');\n\nmodule.exports = (req, res) => {\n  const wasmedge = spawn(path.join(__dirname, 'wasmedge'), [\n    path.join(__dirname, 'grayscale.so'),\n  ]);\n\n  let d = [];\n  wasmedge.stdout.on('data', (data) => {\n    d.push(data);\n  });\n\n  wasmedge.on('close', (code) => {\n    let buf = Buffer.concat(d);\n\n    res.setHeader('Content-Type', req.headers['image-type']);\n    res.send(buf);\n  });\n\n  wasmedge.stdin.write(req.body);\n  wasmedge.stdin.end('');\n};\n")),(0,s.kt)("p",null,"\u51c6\u5907\u5c31\u7eea\u3002\u73b0\u5728",(0,s.kt)("a",{parentName:"p",href:"https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/"},"\u5c06\u5b58\u50a8\u5e93\u90e8\u7f72\u5230 Netlify"),"\uff0c\u4f60\u5c31\u62e5\u6709\u4e86\u4e00\u4e2a\u57fa\u4e8e Rust \u548c WebAssembly \u7684\u9ad8\u6027\u80fd\u65e0\u670d\u52a1\u5668\u540e\u7aef\u7684 Netlify Jamstack \u5e94\u7528\u3002"),(0,s.kt)("h2",{id:"\u793a\u4f8b-2ai-\u63a8\u7406"},"\u793a\u4f8b 2\uff1aAI \u63a8\u7406"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://60ff7e2d10fe590008db70a9--reverent-hodgkin-dc1f51.netlify.app/"},"\u7b2c\u4e8c\u4e2a\u6f14\u793a")," \u5e94\u7528\u5141\u8bb8\u7528\u6237\u4e0a\u4f20\u56fe\u50cf\uff0c\u7136\u540e\u8c03\u7528\u4e00\u4e2a\u65e0\u670d\u52a1\u5668\u51fd\u6570\u5bf9\u56fe\u50cf\u4e2d\u7684\u4e3b\u8981\u4e3b\u9898\u8fdb\u884c\u5206\u7c7b\u3002"),(0,s.kt)("p",null,"\u5b83\u4f4d\u4e8e",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/tree/tensorflow"},"\u4e0e\u4e0a\u4e00\u4e2a\u793a\u4f8b\u76f8\u540c\u7684 GitHub \u5b58\u50a8\u5e93"),"\u4e2d\uff0c\u4f46\u5728 ",(0,s.kt)("inlineCode",{parentName:"p"},"tensorflow")," \u5206\u652f\u4e2d\u3002\u7528\u4e8e\u56fe\u50cf\u5206\u7c7b\u7684\u540e\u7aef\u65e0\u670d\u52a1\u5668\u51fd\u6570\u4f4d\u4e8e ",(0,s.kt)("inlineCode",{parentName:"p"},"tensorflow")," \u5206\u652f\u7684 ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/tree/tensorflow/api/functions/image-classification"},(0,s.kt)("inlineCode",{parentName:"a"},"api/functions/image-classification"))," \u6587\u4ef6\u5939\u4e2d\u3002",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/tensorflow/api/functions/image-classification/src/main.rs"},(0,s.kt)("inlineCode",{parentName:"a"},"src/main.rs"))," \u6587\u4ef6\u5305\u542b\u4e86 Rust \u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u3002Rust \u7a0b\u5e8f\u4ece ",(0,s.kt)("inlineCode",{parentName:"p"},"STDIN")," \u8bfb\u53d6\u56fe\u50cf\u6570\u636e\uff0c\u7136\u540e\u5c06\u6587\u672c\u8f93\u51fa\u8f93\u51fa\u5230 ",(0,s.kt)("inlineCode",{parentName:"p"},"STDOUT"),"\u3002\u5b83\u5229\u7528 WasmEdge Tensorflow API \u8fd0\u884c AI \u63a8\u7406\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rust"},'pub fn main() {\n  // Step 1: Load the TFLite model\n  let model_data: &[u8] = include_bytes!("models/mobilenet_v1_1.0_224/mobilenet_v1_1.0_224_quant.tflite");\n  let labels = include_str!("models/mobilenet_v1_1.0_224/labels_mobilenet_quant_v1_224.txt");\n\n  // Step 2: Read image from STDIN\n  let mut buf = Vec::new();\n  io::stdin().read_to_end(&mut buf).unwrap();\n\n  // Step 3: Resize the input image for the tensorflow model\n  let flat_img = wasmedge_tensorflow_interface::load_jpg_image_to_rgb8(&buf, 224, 224);\n\n  // Step 4: AI inference\n  let mut session = wasmedge_tensorflow_interface::Session::new(&model_data, wasmedge_tensorflow_interface::ModelType::TensorFlowLite);\n  session.add_input("input", &flat_img, &[1, 224, 224, 3])\n         .run();\n  let res_vec: Vec<u8> = session.get_output("MobilenetV1/Predictions/Reshape_1");\n\n  // Step 5: Find the food label that responds to the highest probability in res_vec\n  // ... ...\n  let mut label_lines = labels.lines();\n  for _i in 0..max_index {\n    label_lines.next();\n  }\n\n  // Step 6: Generate the output text\n  let class_name = label_lines.next().unwrap().to_string();\n  if max_value > 50 {\n    println!("It {} a <a href=\'https://www.google.com/search?q={}\'>{}</a> in the picture", confidence.to_string(), class_name, class_name);\n  } else {\n    println!("It does not appears to be any food item in the picture.");\n  }\n}\n')),(0,s.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"cargo")," \u5de5\u5177\u5c06 Rust \u7a0b\u5e8f\u6784\u5efa\u4e3a WebAssembly \u5b57\u8282\u7801\u6216\u672c\u673a\u4ee3\u7801\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cd api/functions/image-classification/\ncargo build --release --target wasm32-wasi\n")),(0,s.kt)("p",null,"\u5c06\u6784\u5efa\u4ea7\u7269\u590d\u5236\u5230 ",(0,s.kt)("inlineCode",{parentName:"p"},"api")," \u6587\u4ef6\u5939\u4e2d\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cp target/wasm32-wasi/release/classify.wasm ../../\n")),(0,s.kt)("p",null,"\u540c\u6837\uff0c",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/tensorflow/api/pre.sh"},(0,s.kt)("inlineCode",{parentName:"a"},"api/pre.sh"))," \u811a\u672c\u5728\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b89\u88c5 WasmEdge \u8fd0\u884c\u65f6\u53ca\u5176 Tensorflow \u4f9d\u8d56\u9879\u3002\u5b83\u8fd8\u5728\u90e8\u7f72\u65f6\u5c06 ",(0,s.kt)("inlineCode",{parentName:"p"},"classify.wasm")," \u5b57\u8282\u7801\u7a0b\u5e8f\u7f16\u8bd1\u4e3a ",(0,s.kt)("inlineCode",{parentName:"p"},"classify.so")," \u672c\u673a\u5171\u4eab\u5e93\u3002"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/tensorflow/api/hello.js"},(0,s.kt)("inlineCode",{parentName:"a"},"api/hello.js"))," \u811a\u672c\u52a0\u8f7d WasmEdge \u8fd0\u884c\u65f6\uff0c\u542f\u52a8\u5728 WasmEdge \u4e2d\u7f16\u8bd1\u7684 WebAssembly \u7a0b\u5e8f\uff0c\u5e76\u901a\u8fc7 ",(0,s.kt)("inlineCode",{parentName:"p"},"STDIN")," \u4f20\u9012\u4e0a\u4f20\u7684\u56fe\u50cf\u6570\u636e\u3002\u8bf7\u6ce8\u610f\uff0c",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/tensorflow/api/hello.js"},(0,s.kt)("inlineCode",{parentName:"a"},"api/hello.js"))," \u8fd0\u884c\u7531 ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime/blob/tensorflow/api/pre.sh"},(0,s.kt)("inlineCode",{parentName:"a"},"api/pre.sh"))," \u751f\u6210\u7684\u7f16\u8bd1\u540e\u7684 ",(0,s.kt)("inlineCode",{parentName:"p"},"classify.so")," \u6587\u4ef6\uff0c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const fs = require('fs');\nconst { spawn } = require('child_process');\nconst path = require('path');\n\nmodule.exports = (req, res) => {\n  const wasmedge = spawn(\n    path.join(__dirname, 'wasmedge-tensorflow-lite'),\n    [path.join(__dirname, 'classify.so')],\n    { env: { LD_LIBRARY_PATH: __dirname } },\n  );\n\n  let d = [];\n  wasmedge.stdout.on('data', (data) => {\n    d.push(data);\n  });\n\n  wasmedge.on('close', (code) => {\n    res.setHeader('Content-Type', `text/plain`);\n    res.send(d.join(''));\n  });\n\n  wasmedge.stdin.write(req.body);\n  wasmedge.stdin.end('');\n};\n")),(0,s.kt)("p",null,"\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5",(0,s.kt)("a",{parentName:"p",href:"https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/"},"\u5c06\u4f60 Fork \u7684\u5b58\u50a8\u5e93\u90e8\u7f72\u5230 Netlify"),"\uff0c\u83b7\u5f97\u4e00\u4e2a\u7528\u4e8e\u4e3b\u9898\u5206\u7c7b\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u3002"),(0,s.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u8f6e\u5230\u4f60\u4f7f\u7528 ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/second-state/netlify-wasm-runtime"},"netlify-wasm-runtime \u5b58\u50a8\u5e93")," \u4f5c\u4e3a\u6a21\u677f\u5728 Netlify \u4e2d\u5f00\u53d1 Rust \u65e0\u670d\u52a1\u5668\u51fd\u6570\u4e86\u3002\u671f\u5f85\u7740\u4f60\u51fa\u8272\u7684\u5de5\u4f5c\u3002"))}c.isMDXComponent=!0}}]);