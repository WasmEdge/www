"use strict";(self.webpackChunkbook=self.webpackChunkbook||[]).push([[6525],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),c=u(n),m=s,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,o=new Array(i);o[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[c]="string"==typeof e?e:s,o[1]=a;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},48322:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var r=n(87462),s=(n(67294),n(3905));const i={sidebar_position:3},o="Build WasmEdge With WasmEdge-Process Plug-in",a={unversionedId:"contribute/source/plugin/process",id:"contribute/source/plugin/process",title:"Build WasmEdge With WasmEdge-Process Plug-in",description:"The WasmEdge Process plug-in provides a sandboxed environment to execute system processes in a secured manner. This guide will walk you through the steps to build the WasmEdge Process plug-in.",source:"@site/docs/contribute/source/plugin/process.md",sourceDirName:"contribute/source/plugin",slug:"/contribute/source/plugin/process",permalink:"/docs/zh-TW/contribute/source/plugin/process",draft:!1,editUrl:"https://github.com/wasmedge/docs/blob/main/docs/contribute/source/plugin/process.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"contributeSidebar",previous:{title:"Build with WASI-nn Plug-in",permalink:"/docs/zh-TW/contribute/source/plugin/wasi_nn"},next:{title:"Build WasmEdge With WasmEdge-Image Plug-in",permalink:"/docs/zh-TW/contribute/source/plugin/image"}},l={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Build WasmEdge with WasmEdge-Process Plug-in",id:"build-wasmedge-with-wasmedge-process-plug-in-1",level:2},{value:"Usage",id:"usage",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,s.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"build-wasmedge-with-wasmedge-process-plug-in"},"Build WasmEdge With WasmEdge-Process Plug-in"),(0,s.kt)("p",null,"The WasmEdge Process plug-in provides a sandboxed environment to execute system processes in a secured manner. This guide will walk you through the steps to build the WasmEdge Process plug-in."),(0,s.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("p",null,"The prerequisites of the WasmEdge-Process plug-in is the same as the ",(0,s.kt)("a",{parentName:"p",href:"/docs/zh-TW/contribute/source/os/linux"},"WasmEdge building environment on the Linux platforms"),"."),(0,s.kt)("h2",{id:"build-wasmedge-with-wasmedge-process-plug-in-1"},"Build WasmEdge with WasmEdge-Process Plug-in"),(0,s.kt)("p",null,"To enable the WasmEdge WasmEdge-Process, developers need to ",(0,s.kt)("a",{parentName:"p",href:"/docs/zh-TW/contribute/source/build_from_src"},"building the WasmEdge from source")," with the cmake option ",(0,s.kt)("inlineCode",{parentName:"p"},"-DWASMEDGE_PLUGIN_PROCESS=On"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cd <path/to/your/wasmedge/source/folder>\ncmake -GNinja -Bbuild -DCMAKE_BUILD_TYPE=Release -DWASMEDGE_PLUGIN_PROCESS=On\ncmake --build build\n# For the WasmEdge-Process plug-in, you should install this project.\ncmake --install build\n")),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"If the built ",(0,s.kt)("inlineCode",{parentName:"p"},"wasmedge")," CLI tool cannot find the WasmEdge-Process plug-in, you can set the ",(0,s.kt)("inlineCode",{parentName:"p"},"WASMEDGE_PLUGIN_PATH")," environment variable to the plug-in installation path (such as ",(0,s.kt)("inlineCode",{parentName:"p"},"/usr/local/lib/wasmedge/"),", or the built plug-in path ",(0,s.kt)("inlineCode",{parentName:"p"},"build/plugins/wasmedge_process/"),") to try to fix this issue.")),(0,s.kt)("p",null,"Then you will have an executable ",(0,s.kt)("inlineCode",{parentName:"p"},"wasmedge")," runtime under ",(0,s.kt)("inlineCode",{parentName:"p"},"/usr/local/bin")," and the WasmEdge-Process plug-in under ",(0,s.kt)("inlineCode",{parentName:"p"},"/usr/local/lib/wasmedge/libwasmedgePluginWasmEdgeProcess.so")," after installation."),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,"To use the plug-in with WasmEdge, you need to specify it when starting the WasmEdge runtime:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"wasmedge --dir .:. --reactor --process_plugin target/release/libwasmedge_process.so your_wasm_file.wasm\n")),(0,s.kt)("p",null,"Replace ",(0,s.kt)("inlineCode",{parentName:"p"},"your_wasm_file.wasm")," with the path to your WebAssembly file. The ",(0,s.kt)("inlineCode",{parentName:"p"},"--process_plugin"),"flag specifies the path to the Process plug-in."),(0,s.kt)("p",null,"That's it! You have successfully built and installed the WasmEdge Process plug-in."),(0,s.kt)("p",null,"For more information, you can refer to the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/WasmEdge/WasmEdge/tree/master/plugins/wasmedge_process"},"GitHub repository"),"."))}d.isMDXComponent=!0}}]);