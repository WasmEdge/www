"use strict";(self.webpackChunkbook=self.webpackChunkbook||[]).push([[5785],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),g=o,m=c["".concat(s,".").concat(g)]||c[g]||d[g]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8985:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:2},a="3.2 Develop WasmEdge Plug-in",l={unversionedId:"contribute/plugin/develop",id:"contribute/plugin/develop",title:"3.2 Develop WasmEdge Plug-in",description:"WasmEdge provides a C++ based API for registering extension modules and host functions. While the WasmEdge language SDKs allow registering host functions from a host (wrapping) application, the plugin API allows such extensions to be incorporated into WasmEdge's own building and releasing process.",source:"@site/docs/contribute/plugin/develop.md",sourceDirName:"contribute/plugin",slug:"/contribute/plugin/develop",permalink:"/book/zh/contribute/plugin/develop",draft:!1,editUrl:"https://github.com/alabulei1/book/docs/contribute/plugin/develop.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"contributeSidebar",previous:{title:"3.1 WasmEdge Plug-in System Introduction",permalink:"/book/zh/contribute/plugin/intro"},next:{title:"4 Testing",permalink:"/book/zh/contribute/test"}},s={},p=[{value:"Loadable Plug-in",id:"loadable-plug-in",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"32-develop-wasmedge-plug-in"},"3.2 Develop WasmEdge Plug-in"),(0,o.kt)("p",null,"WasmEdge provides a C++ based API for registering extension modules and host functions. While the WasmEdge language SDKs allow registering host functions from a host (wrapping) application, the plugin API allows such extensions to be incorporated into WasmEdge's own building and releasing process."),(0,o.kt)("p",null,"The C API for the plug-in mechanism is under development.\nIn the future, we will release the C API of plug-in mechanism and recommend developers to implement the plug-ins with C API."),(0,o.kt)("h2",{id:"loadable-plug-in"},"Loadable Plug-in"),(0,o.kt)("p",null,"Loadable plugin is a standalone ",(0,o.kt)("inlineCode",{parentName:"p"},".so"),"/",(0,o.kt)("inlineCode",{parentName:"p"},".dylib"),"/",(0,o.kt)("inlineCode",{parentName:"p"},".dll")," file that WasmEdge can load during runtime environment, and provide modules to be imported."),(0,o.kt)("p",null,"Please ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/WasmEdge/WasmEdge/tree/master/examples/plugin/get-string"},"refer to the plugin example code"),"."))}c.isMDXComponent=!0}}]);